{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","SORT_REVERSE","App","useState","sortField","setSortField","visibleGoods","setVisibleGoods","sort","param","goods","preparedGoods","goods1","goods2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","product","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAiB,SACjBC,EAAe,UA+Bd,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAASL,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KAEMC,EAAO,SAACC,GACZF,EAlCJ,SAA0BG,EAAON,GAC/B,IAAIO,EAAa,YAAOD,GAExB,MAAkB,KAAdN,EACFO,EAAa,UAAOb,IAKlBM,GACFO,EAAcH,MAAK,SAACI,EAAQC,GAC1B,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAOE,cAAcD,GAC9B,KAAKb,EACH,OAAOY,EAAOG,OAASF,EAAOE,OAChC,QACE,OAAO,MAKXX,IAAcH,GAChBU,EAAcK,UAGTL,GAQWM,CAAiBX,EAAcG,IAC/CJ,EAAaI,IAGf,OACE,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZ,kBAAkB,EAClB,WAAYhB,IAAcL,IAE5BsB,QAAS,kBAAMb,EAAKT,IANtB,iCAWA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,CACZ,qBAAqB,EACrB,WAAYhB,IAAcJ,IAE5BqB,QAAS,kBAAMb,EAAKR,IANtB,4BAWA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,CACZ,qBAAqB,EACrB,WAAYhB,IAAcH,IAE5BoB,QAAS,kBAAMb,EAAKP,IANtB,qBAWA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,CACZ,oBAAoB,EACpB,WAA0B,KAAdhB,IAEdiB,QAAS,kBAAMb,EAAK,KANtB,sBAYF,6BACGF,EAAagB,KAAI,SAAAC,GAAO,OACvB,oBAAI,UAAQ,OAAZ,SAAkCA,GAAVA,YC3GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.68817e7c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_REVERSE = 'reverse';\n\nfunction getPreparedGoods(goods, sortField) {\n  let preparedGoods = [...goods];\n\n  if (sortField === '') {\n    preparedGoods = [...goodsFromServer];\n\n    return preparedGoods;\n  }\n\n  if (sortField) {\n    preparedGoods.sort((goods1, goods2) => {\n      switch (sortField) {\n        case SORT_ALPHABETICALLY:\n          return goods1.localeCompare(goods2);\n        case SORT_BY_LENGTH:\n          return goods1.length - goods2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortField === SORT_REVERSE) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n\n  const sort = (param) => {\n    setVisibleGoods(getPreparedGoods(visibleGoods, param));\n    setSortField(param);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-info': true,\n            'is-light': sortField === SORT_ALPHABETICALLY,\n          })}\n          onClick={() => sort(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-success': true,\n            'is-light': sortField === SORT_BY_LENGTH,\n          })}\n          onClick={() => sort(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-warning': true,\n            'is-light': sortField === SORT_REVERSE,\n          })}\n          onClick={() => sort(SORT_REVERSE)}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn({\n            'button is-danger': true,\n            'is-light': sortField === '',\n          })}\n          onClick={() => sort('')}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map(product => (\n          <li data-cy=\"Good\" key={product}>{product}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}